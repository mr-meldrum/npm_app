def IMAGE = 'stag-docker-repo.clix.io:5000/npm-app'
def VERSION = ${env.BUILD_ID}

pipeline {
    agent any

    environment {
        CI = 'true'
        HOME = '.'
    }

    stages {
        stage('Build') {
            agent {
                docker {
                    reuseNode true
                    image 'node:6-alpine'
                    args '-p 3000:3000'
                }
            }
            steps {
                sh 'printenv || true'
                sh 'pwd || true'
                sh 'hostname || true'
                sh 'npm install'
                sh 'touch file.tmp'
            }
        }

        stage('Test') {
            agent {
                docker {
                    reuseNode true
                    image 'node:6-alpine'
                    args '-p 3000:3000'
                }
            }
            steps {
                sh './jenkins/scripts/test.sh'
            }
        }

        stage('UI Test') {
            options {
                timeout(time: 2, unit: 'MINUTES') 
            }
            agent {
                docker {
                    reuseNode true
                    image 'node:6-alpine'
                    args '-p 3000:3000'
                }
            }
            steps {
                sh './jenkins/scripts/deliver.sh'
                input message: 'Finished using the web site? (Click "Proceed" to continue)'
                sh './jenkins/scripts/kill.sh'
            }
        }

        stage('Build image') {
            steps {
                sh """
                    docker build -t ${IMAGE} .
                    docker tag ${IMAGE} ${IMAGE}:${VERSION}
                """
            }
        }

        stage('Image test') {
            agent {
                docker { image "${IMAGE}:${VERSION}" }
	    }
	    steps {
                sh 'npm test'
            }
        }

        stage('Push image') {
            steps {
                sh """
                    docker push ${IMAGE}:${VERSION}
                    docker push ${IMAGE}:latest
                """
            }
        }
    }
}
